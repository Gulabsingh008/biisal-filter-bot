from pyrogram import Client, filters
import os
import random
import subprocess

CLIP_DIR = "clips"
os.makedirs(CLIP_DIR, exist_ok=True)

@Client.on_message(filters.command("clip") & filters.private)
async def clip_command(client, message):
    await message.reply("üì© Send a video to extract a 60-sec random clip.")

@Client.on_message(filters.video & filters.private)
async def process_video(client, message):
    if not message.video:
        await message.reply("‡§ï‡•É‡§™‡§Ø‡§æ ‡§è‡§ï ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§≠‡•á‡§ú‡•á‡§Ç!")
        return

    # ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç
    video_path = await message.download()
    clip_filename = os.path.join(CLIP_DIR, f"clip_{random.randint(1000, 9999)}.mp4")

    # Debugging Message
    print(f"‚úÖ Video Received: {video_path}")

    # FFmpeg ‡§∏‡•á ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ï‡•Ä Duration ‡§®‡§ø‡§ï‡§æ‡§≤‡•á‡§Ç
    duration_cmd = f"ffprobe -i \"{video_path}\" -show_entries format=duration -v quiet -of csv=\"p=0\""
    duration_output = subprocess.getoutput(duration_cmd)

    try:
        duration = float(duration_output.strip())
    except ValueError:
        await message.reply("üö´ Error: Unable to get video duration!")
        return

    if duration < 60:
        await message.reply("‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã 60 ‡§∏‡•á‡§ï‡§Ç‡§° ‡§∏‡•á ‡§õ‡•ã‡§ü‡§æ ‡§π‡•à!")
        os.remove(video_path)  # Unused file delete ‡§ï‡§∞‡•á‡§Ç
        return

    # ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ï‡•á ‡§¨‡•Ä‡§ö ‡§∏‡•á 60 ‡§∏‡•á‡§ï‡§Ç‡§° ‡§ï‡•Ä ‡§ï‡•ç‡§≤‡§ø‡§™ ‡§®‡§ø‡§ï‡§æ‡§≤‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è Start Time ‡§∏‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç
    start_time = max(0, int(duration / 2) - 30)  

    # FFmpeg Command to Extract 60-sec Clip
    cmd = f"ffmpeg -i \"{video_path}\" -ss {start_time} -t 60 -c copy \"{clip_filename}\""
    subprocess.run(cmd, shell=True, check=True)

    # Debugging Message
    print(f"üé• Clipping Done: {clip_filename}")

    # ‡§Ö‡§¨ ‡§¨‡•â‡§ü ‡§ï‡•ç‡§≤‡§ø‡§™ ‡§≠‡•á‡§ú‡•á‡§ó‡§æ
    await message.reply_video(clip_filename, caption="üé• Here is your 60-sec sample clip!")

    # Debugging Message
    print("‚úÖ Clip Sent Successfully!")

    # ‡§ï‡•ç‡§≤‡§ø‡§™ ‡§î‡§∞ ‡§ì‡§∞‡§ø‡§ú‡§ø‡§®‡§≤ ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ï‡•ã ‡§°‡§ø‡§≤‡•Ä‡§ü ‡§ï‡§∞‡•á‡§Ç
    os.remove(video_path)
    os.remove(clip_filename)
